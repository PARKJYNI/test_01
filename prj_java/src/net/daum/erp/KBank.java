//소속 패키지 선언
package net.daum.erp;

// 국민은행 정보를 관리하는 [KBank]클래스 선언
//이때, KBank 클래스는 Bank 클래스를 상속함.
//상속한 클래스는 [서브클래스], 상속을 허락한 [슈퍼클래스]라고 부름.
//서브클래스는 슈퍼클래스의 멤버를 객체 생성 없이 호출 가능.(단, private이 붙은 멤버는 호출 불가능)
public class KBank  extends Bank{
	
	//생성자 선언
	public KBank( ) {
		//부모생성자 호출하기
		// 서브클래스의 생성자 첫줄에는 반드시 슈퍼클래스의 생성자를 호출하는 super(~) 가 반드시 나와야 함.
		// super(~)가 없다면 자동으로 super( )가 삽입 됨.
		super(3000, "국민"); // 없으면 은신 중!!
		
		//동료메소드 호출하기
		print_msg();
	}

	
	//메소드 선언
	// 슈퍼클래스가 가진 print_msg 메소드를 오버라이딩(=overring = 재정의)하기.
	//  < 오버라이딩 정의 >: 슈퍼클래스의 메소드를 [재정의] 하는 것.
	//     *재정의 : 슈퍼클래스의 메소드를 복사해서 내부의 실행 구문을 바꿔 서브클래스 내부에 선언하는 행위.
	//  < 오버라이딩 규칙 >
	//    (1) 메소드명, 매개변수, 매개변수 자료형이 일치해야 함.
	//    (2) 접근제어자는 슈퍼클래스의 메소드 거 보다 범위가 크거나 같아야 함.
	//    (3) 메소드 이름 위에 @Override 라는 어노테이션을 붙이면 좋음.
	@Override
	public void print_msg() {
		System.out.println("업무시간은 오전 9:00 ~ 오후 5:00 입니다.");
	}

	
	
	
	
	
}
/*

<문> @Override 는 무슨 표시? <입>
<풀> 어노테이션(annotation = 표기법)의 일종.
 - 어노테이션(annotation = 표기법) 정의
 : 클래스 이름 앞, 속성변수 앞, 메소드 앞, 매개변수 앞에 붙여 특정 기능을 부여하는 표기법.
 : 표기방법은 @대문자로 시작하는 영문
 : <예> @Autowired @RequestMapping 등 주로 spring 할 때 많이 등장함.

*/