
//아래 class의 소속 패키지 선언
//모든 class의 최상단에는 무조건 패키지 선언이 들어간다. 
package com.daum.test;

//Test_01 이라는 클래스 선언.
//자바는 class 또는 interface라는 최소 단위 프로그램들로 구성된다.
//class 이름은 관용적으로 대문자로 시작, 의미있게 주기(가독성)
public class Test_01 {

	//자바 가상머신(JVM)이 찾아서 호출하는 main method 선언
	//복붙2
	public static void main(String[] args) {
		// 학생번호를 저장하기 위해
		// int형 데이터 (정수 데이터)를 저장할 메모리 공간을 확보하고
		// 이 곳 이름을 student_no 라고 명한다.
		
		// 학생번호를 저장하기 위해
		// int형 데이터를 저장할 변수 student_no 를 선언하기.
		int student_no;
		
		// student_no 라는 변수에 1을 저장하기.
		// 환경과 조건, 상황에 따라 값을 1, 2로 저장가능
		// ' = ' 대입연산자
		student_no = 1;
		
		
		// 학생번호를 저장하기 위해
		// int형 데이터를 저장할 메모리 공간을 확보하고
		// 이 곳 이름을 student_num 라고 명한다.
		// 이 메모리 공간에 정수형 데이터 1을 저장한다.
		// ↓
		// 학생번호를 저장하기 위해
		// int형 데이터를 저장할 변수 student_num 을 선언하기
		// 변수 student_num에 정수값 1 저장하기.
		int student_num = 1; //(틀) 자료형 변수명 = 데이터;
		
		// 학생이름을 저장하기 위해
		// 참조형인 [String 객체]의 메모리 위치 주소값을 저장할 메모리 공간을 확보하고
		// 이 곳 이름을 student_name 라고 명한다.
		// ↓
		// 문자 "곽두팔"을 관리하는 String객체를 생성하여 메모리에 올리고
		// 이 객체의 메모리 주소값을 변수 student_name 에 저장한다.
		String student_name = "곽두팔";
		//FM 대로 하면 => String student_name = new String("사오정");
		
		// 생일을 저장하기 위해
		// String 객체의 메모리 위치 주소값을 저장할 메모리 공간을 확보하고
		// 이 곳 이름을 birth day라고 명한다.
		// ↓
		// 문자 "2004-10-24"을 관리하는 String 객체를 생성하여 메모리에 올리고
		// String 객체의 메모리 위치 주소값을 변수 birth_day에 저장하기.
		String birth_day = "2004-10-24";
		
		
		// 성별을 저장하기 위해
		// char형 데이터를 저장할 메모리 공간을 확보하고
		// 이 곳 이름을 gender 라고 명한다.
		// 이 메모리 공간에 '남'을 저장한다.
		//↓
		// 성별를 저장하기 위해
		// char형 데이터를 저장할 변수 gender 를 선언하기
		// 변수 gender에 '남' 저장하기.
		char gender = '남';
		// String gender = "남"; 가능
		
		
		// 결혼여부를 저장하기 위해
		// boolean형 데이터를 저장할 메모리 공간을 확보하고
		// 이 곳 이름을 is_married라고 명한다.
		// 이 메모리 공간에 false를 저장한다.
		//↓
		// 결혼여부를 저장하기 위해
		// boolean형 데이터를 저장할 변수 is_married 를 선언하기
		// 변수 false에 false 저장하기.	
		boolean is_married = false;
		//만약 결혼 횟수라면? => int married_cnt = 1;
		
		
		//주민번호를 저장하기 위해
		// [String 객체]의 메모리 위치 주소값을 저장할 메모리 공간을 확보하고
		// 이 곳 이름을 jumin_num 라고 명한다.
		// 문자를 "041024-3001234"을 관리하는 String객체를 생성하여 메모리에 올리고 
		// 이 객체의 메모리 주소값을 변수 jumin_num에 저장하기.
		//↓
		// 주민번호를 저장하기 위해
		// String 객체의 메모리 위치 주소값을 저장할 변수 jumin_num를 선언하기.
		// 문자 "041024-3001234" 을 관리하는 String 객체를 생성하고
		// String 객체의 메모리 위치 주소값을 변수 jumin_num에 저장하기.
		String jumin_num = "041024-3001234";

		
		// 몸무게를 저장하기 위해
		// double형 데이터를 저장할 메모리 공간을 확보하고
		// 이 곳 이름을 weight라고 명한다.
		// 이 메모리 공간에 70.45를 저장한다.
		//↓
		// 몸무게를 저장하기 위해
		// 실수형 데이터를 저장할 변수 weight 를 선언하기
		// 70.45 저장하기.	
		double weight = 70.45;
		
		
		//복붙4
		
		
		//복붙5
		//국어점수를 저장하기 위해 변수 선언하고 데이터 저장하기
		double kor = 90;
		
		double eng = 70.5;
		
		double mat = 90.5;
		
		//총점을 저장하기 위해 
		//double형 데이터를 저장할 메모리 공간을 확보하고
		//이 곳 이름을 sum 라고 명한다.
		// 이 메모리 공간에
		// kor변수 안의 데이터와 eng 변수 안의 데이터와 mat 변수 안의 데이터를 더하여 저장한다.
		
		double sum = kor + eng + mat;
		//double sum = 90.0 + 70.5 + 90.5;
		
		
		//평균을 저장하기 위해
		//double형 데이터를 저장할 메모리 공간을 확보하고 이 곳 이름을 avg라고 명한다.
		//이  메모리 공간에 sum변수 안의 데이터를 3으로 나눈 결과를 저장한다.
		
		//평균을 저장하기 위해
		//실수형 데이터를 저장할 변수 avg를 선언하고 sum 변수 안의 데이터를 3으로 나눈 결과를 저장한다.
		double avg1 = sum/3;
		double avg2 = (kor + eng + mat)/3;
		
		
		// 변수 안의 데이터를 콘솔창에 출력하기
		// ' + ' 는 연결 연산자, 붙여서 출력~
		System.out.println("학생번호: " + student_no);
		//복붙6
		
		
		
	}

}

/*
복붙3
-----------------------------
<문> String stu_name = "김덕배"; -->  String stu_name = '김덕배';로 수정하면?
<풀> 에러 발생. String 객체가 관리하는 1개 이상의 문자데이터는 더블쿼트로 감싸야한다.
<주의>
String은 기본 자료형이 아니다. 
너무 많이 사용하다 보니 형식이 파괴되어 기본형처럼 사용하나 절대 기본형이 아니다.
-----------------------------
<문> int student_no = 1; --> int student_no; 로 수정하면?
<풀> int student_no; 에서 변수만 선언하고 데이터를 저장하지 않으면
	정말 변수에 데이터가 없다.
	
	존재하지 않는 데이터 사용할 때 에러가 발생한다.
	즉, int student_no 부분에서는 에러가 발생하지 않고
	사용하는 부분 
		System.out.println("학생번호: " + student_no);
	에서 에러가 발생한다.
	
	=>지역변수를 선언하고 데이터를 저장하지 않으면 자동 초기화가 안 됨.
	  속성변수를 선언하고 데이터를 저장하지 않으면 자동 초기화가 됨.
	  initialize 초기화이다. 꼭 기억. init.
	(지역변수를 사용하려면 반드시 초기화가 필요함 (속성변수는 JAVA가 자동 초기화 해줌))
-----------------------------
<문> double weight = 67.5; --> double weight = 67로 수정하면?
<풀> 에러 없음.
	 실수형 변수에 정수형 데이터는 예외적으로 저장될 수 있다. 
	 수학적으로 정수는 실수에 포함되기 때문이다.
	 =>암시적 형변환(Implicit Data Type Conversion)이 일어남.
	 즉, 67이 67.0으로 바뀐다. -> 출력시 67.0
-----------------------------
<문> double sum = kor + eng + mat; 코드에서 이퀄(=) 오른쪽에 변수가 등장하면 어떻게 분석?
	 원래 이퀄(=) 오른쪽에는 저장할 데이터만 나와야 하는데 이상하다?
<풀> 이퀄(=) 오른쪽에 변수는 변수로 코딩하지만 변수 안의 데이터로 바꿔봐야한다.
	 이퀄(=) 오른쪽에 kor, eng, mat는 데이터로 바꾸어 봐야 한다.
-----------------------------
<문> double sum = kor + eng + mat;
	 System.out.println("학생번호 : " + student_no); 에서 + 차이는?
<풀> 사칙연산자와 연결연산자(왼쪽의 문자와 오른쪽 문자를 붙이라는 의미)
	 만약 문자 + 숫자라면 숫자가 문자로 암시적 형변환되어 문자와 붙여진다.
-----------------------------
<문> String name = "김덕배";  -->  String name = ""; 로 수정하면?
<풀> 에러 없음.
	 자바에서는 길이가 없는 문자도 문자 취급.
	 
<문> 기존에 double weight = 70.5;로 있을 때,
	 double tall = 171.3; --> double weight = 171.3; 로 수정하면?
<풀> 에러 발생.
	 동일한 블럭({~}) 안에서 동일한 이름의 변수를 2개 이상 선언할 수 없음.
	 누구를 호출할지 모르기 때문.
-----------------------------	 	 
<문> double weight = 67.5; 다음 줄에 weight = 70.5; 를 삽입하면?
<풀> 에러 없음.
	 double weight = 67.5; -> 실수형 저장하는 변수 선언하고 데이터 저장.
	  weight = 70.5; -> 기존에 선언된 변수 weight에 70.5를 재 저장해라. 
	  				자료형이 없음 즉, 데이터를 갱신해라.


	  				
*/











